@*
 * DiceCombats - Copyright (C) 2025 Yann Charbon
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 * This file is part of DiceCombats, released under the GNU GPL v3.
 * See the LICENSE file in the repository root for details.
*@

@using Markdig
@using System.Reflection

@inject DiceCombatsService CombatService
@inject IStringLocalizer<Resources.Localization.WelcomeMessage> Loc

<style>
    .welcome-header {
        font-size: 30px;
        text-align: center;
    }

    .welcome-body {
        list-style-type: circle;
    }

    .welcome-release-notes {
        margin:5px;
        margin-top: 15px;
        margin-bottom: 15px;
        padding:10px;
        border-radius:10px;
        background-color:#0F0F0F;
        box-shadow: 0 2px 10px rgba(255, 255, 255, 0.2);
        max-height: 250px;
        overflow-y: auto;
    }

    ul {
        list-style-type: disc;
        padding: 10px 0 !important;
        padding-left: 20px !important;
    }
</style>

@if (!SettingsView)
{
    <div class="welcome-header">
        @if (UpdateAvailable)
        {
            <h2>@Loc["UpdateAvailable"]</h2>
        }
        else
        {
            @if (!NewVersion)
            {
                <h2>@Loc["Thanks"]</h2>
            }
            else
            {
                <h2>@Loc["NewVersion"] - v@_version</h2>
            }
        }
    </div>
}

<div class="welcome-body">
    @if (UpdateAvailable)
    {
        <h5>DiceCombats <b>@UpdateInfos?.tag_name</b> @Loc["IsAvailable"].</h5>
        <br />
        @if (CombatService.IsCurrentCulture("fr")) {
            <h5>Se rendre sur <a style="color:darkcyan;" href="@UpdateInfos?.html_url">@UpdateInfos?.html_url</a> pour télécharger la mise à jour. Si vous souhaitez le faire plus tard, veuillez vous rendre dans les paramètres.</h5>
        } else {
            <h5>Visit <a style="color:darkcyan;" href="@UpdateInfos?.html_url">@UpdateInfos?.html_url</a> to download the update or go to app settings if you want to do it later.</h5>
        }
    } else
    {
        @if (!NewVersion)
        {
            <h3>@Loc["KeyFeatures"]</h3>
            <p>@Loc["KeyFeaturesDescription"]</p>
            <ul>
                <li>@((MarkupString)Loc["KeyFeature1"].Value)</li>
                <li>@((MarkupString)Loc["KeyFeature2"].Value)</li>
                <li>@((MarkupString)Loc["KeyFeature3"].Value)</li>
                <li>@((MarkupString)Loc["KeyFeature4"].Value)</li>
            </ul>
        }
        else
        {
            <div class="welcome-release-notes">
                @((MarkupString)_releaseNotes)
            </div>
        }
        <h3>@Loc["License"]</h3>
        <p>@((MarkupString)Loc["LicenseDescription"].Value) <a href="https://github.com/YannCharbon/DiceCombats" style="color:white;" target="_blank"><MudIcon Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" />&nbsp;GitHub</a>.</p>
        <h3>@Loc["SupportProject"]</h3>
        <p>
            @Loc["SupportProjectDescription1"] <a href="https://github.com/YannCharbon/DiceCombats" style="color:white;" target="_blank"><MudIcon Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" />&nbsp;GitHub</a>.
            @Loc["SupportProjectDescription2"]
        </p>
        <p>@Loc["DonationDescription"]</p>
        <span>
            <a href="https://www.paypal.com/donate/?hosted_button_id=4X9ZURL5T4E6N" title="PayPal - The safer, easier way to pay online!" alt="Donate with PayPal button">
                <img alt="" border="0" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" />
            </a>
        </span>
        <br />
        <br />
        @if (!SettingsView)
        {
            <h4>@Loc["Thanks2"]</h4>
        }
    }
</div>

@code {
    [Parameter]
    public bool NewVersion { get; set; } = false;
    [Parameter]
    public bool UpdateAvailable { get; set; } = false;
    [Parameter]
    public GitHubRelease? UpdateInfos { get; set; } = null;
    [Parameter]
    public bool SettingsView { get; set; } = false;

    private string _version = "";
    private string _releaseNotes = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _version = CombatService.GetVersion();

        string releaseNotesPath = Path.Combine(FileSystem.AppDataDirectory, "wwwroot/RELEASE_NOTES.md");

        if (File.Exists(releaseNotesPath))
        {
            // File exists in AppDataDirectory
            _releaseNotes = Markdown.ToHtml(File.ReadAllText(releaseNotesPath));
        }
        else
        {
            // If the file is not in AppDataDirectory, load it directly from the assembly
            using var stream = Task.Run(() => FileSystem.OpenAppPackageFileAsync("wwwroot/RELEASE_NOTES.md")).Result;
            using var reader = new StreamReader(stream);
            _releaseNotes = Markdown.ToHtml(reader.ReadToEnd());
        }
    }
}
