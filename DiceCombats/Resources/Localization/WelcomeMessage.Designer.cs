//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiceCombats.Resources.Localization {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class WelcomeMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal WelcomeMessage() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DiceCombats.Resources.Localization.WelcomeMessage", typeof(WelcomeMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If you enjoy using DiceCombats and want to support its development, a donation on Paypal is really appreciated..
        /// </summary>
        internal static string DonationDescription {
            get {
                return ResourceManager.GetString("DonationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à is available.
        /// </summary>
        internal static string IsAvailable {
            get {
                return ResourceManager.GetString("IsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;strong&gt;Flexible Creature Creation:&lt;/strong&gt; Customize creatures for any system using custom fields..
        /// </summary>
        internal static string KeyFeature1 {
            get {
                return ResourceManager.GetString("KeyFeature1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;strong&gt;Modular Combat Management:&lt;/strong&gt; Track initiative, hit points, combat duration and statuses, add creatures with ease..
        /// </summary>
        internal static string KeyFeature2 {
            get {
                return ResourceManager.GetString("KeyFeature2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;strong&gt;System-Agnostic Design:&lt;/strong&gt; Adapt the tool to your campaign&apos;s needs..
        /// </summary>
        internal static string KeyFeature3 {
            get {
                return ResourceManager.GetString("KeyFeature3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;strong&gt;Share your work:&lt;/strong&gt; Import/export your creatures and combats to share them with other people..
        /// </summary>
        internal static string KeyFeature4 {
            get {
                return ResourceManager.GetString("KeyFeature4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key features.
        /// </summary>
        internal static string KeyFeatures {
            get {
                return ResourceManager.GetString("KeyFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DiceCombats is a tabletop RPG combat manager, designed to make your game mastering smooth and enjoyable..
        /// </summary>
        internal static string KeyFeaturesDescription {
            get {
                return ResourceManager.GetString("KeyFeaturesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à License.
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DiceCombats is open-source software licensed under the &lt;b&gt;GPL-3.0 license&lt;/b&gt;. For details, visit.
        /// </summary>
        internal static string LicenseDescription {
            get {
                return ResourceManager.GetString("LicenseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New version.
        /// </summary>
        internal static string NewVersion {
            get {
                return ResourceManager.GetString("NewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Support the project.
        /// </summary>
        internal static string SupportProject {
            get {
                return ResourceManager.GetString("SupportProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Feel free to suggest any new feature, improvements and bug fixes on.
        /// </summary>
        internal static string SupportProjectDescription1 {
            get {
                return ResourceManager.GetString("SupportProjectDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à As I am developing this software on my free time, please consider that updating/bug fixing might be slow..
        /// </summary>
        internal static string SupportProjectDescription2 {
            get {
                return ResourceManager.GetString("SupportProjectDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thank you for choosing DiceCombats!.
        /// </summary>
        internal static string Thanks {
            get {
                return ResourceManager.GetString("Thanks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Thanks a lot and good game!.
        /// </summary>
        internal static string Thanks2 {
            get {
                return ResourceManager.GetString("Thanks2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New update available.
        /// </summary>
        internal static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
    }
}
