@*
 * DiceCombats - Copyright (C) 2025 Yann Charbon
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 * This file is part of DiceCombats, released under the GNU GPL v3.
 * See the LICENSE file in the repository root for details.
*@

@page "/"

@inject NavigationManager Navigation
@inject DiceCombatsService CombatService
@inject IStringLocalizer<Resources.Localization.Home> Loc

<style>
    .favorite-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<GenericModal TContent="WelcomeMessage" OnClose="HandleWelcomeMessageModalClose" @ref="WelcomeMessageModalRef">
    <WelcomeMessage NewVersion="_newVersion" UpdateAvailable="_updateAvailable" UpdateInfos="_updateInfos" />
</GenericModal>

<div style="justify-content:center;text-align:center;padding-top:50px">
    <h3>@Loc["Title"]</h3>
    
    <p>@Loc["Description"]</p>
</div>

<div style="justify-content:center;text-align:center;padding-top:50px">
    <h3>@Loc["FavoriteCombatsTitle"]</h3>

    @if (CombatService.GetCreatureList().Count == 0)
    {
        <p>
            @Loc["FavoriteCombatsNoCreatures"]</p>
        <MudButton OnClick="@(() => Navigation.NavigateTo("/newcreature"))"
                    Variant="Variant.Filled"
                    StartIcon="@Icons.Material.Filled.Add"
                    Color="@Color.Primary"
                    Size="Size.Large">
            @Loc["FavoriteCombatsCreateFirstCreature"]
        </MudButton>
    }
    else if (CombatService.GetCombatList().Count == 0)
    {
        <p>@Loc["FavoriteCombatsNoCombats"]</p>
        <MudButton OnClick="@(() => Navigation.NavigateTo("/combatmanager/new"))"
                    Variant="Variant.Filled"
                    StartIcon="@Icons.Material.Filled.Add"
                    Color="@Color.Primary"
                    Size="Size.Large">
            @Loc["FavoriteCombatsCreateFirstCombat"]
        </MudButton>
    }
    else if (CombatService.GetFavoriteCombatsGuids().Count == 0)
    {
        <p>
            @Loc["FavoriteCombatsNoFavorite"]</p>
        <MudButton OnClick="@(() => Navigation.NavigateTo("/combatsexplorer"))"
                   Variant="Variant.Filled"
                   StartIcon="@Icons.Material.Filled.Add"
                   Color="@Color.Primary"
                   Size="Size.Large">
            @Loc["FavoriteCombatsSelect"]
        </MudButton>
    } else
    {
        <div class="row favorite-container">
            @foreach (string guid in CombatService.GetFavoriteCombatsGuids())
            {
                <div style="border-radius:10px;background-color:#1E867F;padding:5px;margin:5px;width:18rem;">
                    <h4><a href="/combatmanager/@guid">@CombatService.GetCombatFromGUID(guid)?.Name</a></h4>
                </div>
            }
        </div>
    }

    <MudDivider Style="margin-top:50px;margin-bottom:30px;"></MudDivider>

    <a href="https://github.com/YannCharbon/DiceCombats" target="_blank" style="color:white;margin:10px;"><MudIcon Icon="@Icons.Custom.Brands.GitHub" Size="@Size.Large" Title="GitHub" /></a>
    <MudIcon Icon="@Icons.Material.Filled.Settings" Size="@Size.Large" style="color:white;margin:10px;cursor:pointer;" Title="@Loc["SettingsTitle"]" @onclick="@(() => Navigation.NavigateTo("/settings"))" />


</div>

@code {
    private GenericModal<WelcomeMessage>? WelcomeMessageModalRef;

    private bool _newVersion = false;
    private bool _updateAvailable = false;
    private GitHubRelease? _updateInfos = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string lastKnownVersion = Preferences.Get("LastKnownVersion", "-1");

            // Fetch update information
            _updateInfos = await CombatService.CheckUpdate();
            if (_updateInfos != null)
            {
                if (Preferences.Get("LastShowedNewVersion", "-1") != _updateInfos?.tag_name && Preferences.Get("LastShowedNewVersion", "-1") != "-1")
                {
                    _updateAvailable = (CombatService.GetVersion() != _updateInfos?.tag_name);
                }
            }

            if (lastKnownVersion != CombatService.GetVersion())
            {
                _newVersion = true;
            }

            // Show the modal if necessary
            if (lastKnownVersion == "-1" || _newVersion || _updateAvailable)
            {
                WelcomeMessageModalRef?.Show();
            }

            StateHasChanged();
        }
    }

    private void HandleWelcomeMessageModalClose(bool result)
    {
        Preferences.Set("LastKnownVersion", CombatService.GetVersion());
        if (_updateInfos != null)
        {
            Preferences.Set("LastShowedNewVersion", _updateInfos.tag_name);
        }
    }
}
