@inject DiceCombatsService CombatService
@inject NavigationManager Navigation

<style>
    .CreatureViewerCreature {
        padding:10px;
        margin:5px;
        border-radius:10px;
        background-color:#303030;
    }
</style>

<div style="margin-bottom:20px;">
    <h3><span style="padding:5px;border-radius:10px;background-color:#1E867F">Creatures</span></h3>
</div>
<div style="background-color:#0F0F0F;padding:20px;border-radius:10px;">
    @for(char chr = 'a'; chr < 'z'; chr++)
    {
        @if (CombatService.GetCreatureList().Find(x => x.Name.ToLower().StartsWith(chr) && x.IsPlayer == false) != null)
        {
            <div style="border-bottom:solid; border-bottom-width:1px; border-bottom-color:grey;">
                <h4>@chr.ToString().ToUpper()</h4>
            </div>
            <div class="row">
                @foreach (DCCreature creature in CombatService.GetCreatureList().FindAll(x => x.Name.ToLower().StartsWith(chr) && x.IsPlayer == false))
                {
                    <div class="col col-md-3 CreatureViewerCreature">
                        <MudStack Row="true">
                                <h4>@creature.Name</h4>
                                <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                    <MudIconButton OnClick="() => Edit(creature)" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Edit" Color="@Color.Primary" Size="Size.Large"></MudIconButton>
                                    <MudIconButton OnClick="() => CombatService.DeleteCreature(creature)" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Delete" Color="@Color.Error" Size="Size.Large"></MudIconButton>
                                </MudButtonGroup>
                        </MudStack>
                    </div>
                }
            </div>
        }        
    }
    
</div>

<div style="margin-top:20px;margin-bottom:20px;">
    <h3><span style="padding:5px;border-radius:10px;background-color:#1E867F">Players</span></h3>
</div>
<div style="background-color:#0F0F0F;padding:20px;border-radius:10px;">
    @for (char chr = 'a'; chr < 'z'; chr++)
    {
        @if (CombatService.GetCreatureList().Find(x => x.Name.ToLower().StartsWith(chr) && x.IsPlayer == true) != null)
        {
            <div style="border-bottom:solid; border-bottom-width:1px; border-bottom-color:grey;">
                <h4>@chr.ToString().ToUpper()</h4>
            </div>
            <div class="row">
                @foreach (DCCreature creature in CombatService.GetCreatureList().FindAll(x => x.Name.ToLower().StartsWith(chr) && x.IsPlayer == true))
                {
                    <div class="col col-md-3 CreatureViewerCreature">
                        <MudStack Row="true">
                            <h4>@creature.Name</h4>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                                <MudIconButton OnClick="() => Edit(creature)" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Edit" Color="@Color.Primary" Size="Size.Large"></MudIconButton>
                                <MudIconButton OnClick="() => CombatService.DeleteCreature(creature)" Variant="Variant.Filled" Icon="@Icons.Material.Filled.Delete" Color="@Color.Error" Size="Size.Large"></MudIconButton>
                            </MudButtonGroup>
                        </MudStack>
                    </div>
                }
            </div>
        }
    }

</div>

@code {
    private void Edit(DCCreature creature)
    {
        Navigation.NavigateTo($"/creatureedit/{creature.Id.ToString()}");
    }
}
