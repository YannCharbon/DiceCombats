@page "/settings"

@inject DiceCombatsService CombatService

<style>
    .settings-group-name {
        border-radius: 60px;
        padding: 0px 20px 0px 0px;
        margin:10px;
        background-color: darkcyan;
        display: flex;
        align-items: center;
    }

    .settings-group {
        margin:10px;
        padding:10px;
        border-radius:10px;
        background-color:#505050;
        box-shadow: 0 2px 10px rgba(255, 255, 255, 0.2);
    }
</style>


<div class="settings-group">
    <div style="display:flex;">
        <div class="settings-group-name">
            <MudIcon Icon="@Icons.Material.Filled.Settings" Size="@Size.Large" style="color:white;margin:10px;" Title="Settings" />
            <h3>About</h3>
        </div>
    </div>
    
    <div>
        <MudStack Row="true" AlignItems="AlignItems.Center">
            <MudItem>
                <h5>Current software: DiceCombats @CombatService.GetVersion()</h5>
            </MudItem>
            <MudItem>
                <h6>&copy; Copyright Yann Charbon</h6>
            </MudItem>
        </MudStack>
        <WelcomeMessage SettingsView="true" NewVersion="true" />
    </div>
</div>

<div class="settings-group">
    <div style="display:flex;">
        <div class="settings-group-name">
            <MudIcon Icon="@Icons.Material.Filled.Settings" Size="@Size.Large" style="color:white;margin:10px;" Title="Settings" />
            <h3>Updates</h3>
        </div>
    </div>

    @if (_updateAvailable)
    {
        <h5>DiceCombats <b>@_updateInfos?.tag_name</b> is available.</h5>
        <br />
        <h5>Visit <a style="color:darkcyan;" href="@_updateInfos?.html_url">@_updateInfos?.html_url</a> to download the update.</h5>
    }
</div>

@code {
    private GenericModal<WelcomeMessage>? WelcomeMessageModalRef;

    private bool _updateAvailable = false;
    private GitHubRelease? _updateInfos = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

        }

        _updateInfos = await CombatService.CheckUpdate();
        if (_updateInfos != null)
        {
            _updateAvailable = (CombatService.GetVersion() != _updateInfos?.tag_name);
        }

        StateHasChanged();
    }
}
